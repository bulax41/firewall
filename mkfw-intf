#!/bin/bash
CHAIN_NAME="FORWARD"
SYSCONFIG="/etc/sysconfig/network-scripts"


usage () {
        echo
        echo "Usage: mkfw-intf 'name' 'device' 'address' 'gateway'"
        echo "Examples: "
        echo "          > mkfw-intf public0 eth1 10.1.2.10/24 10.1.2.1"
        echo
}


if [ $# -le 2 ]; then
	echo "Incorrect number of arguments"
	echo
	usage
	exit
fi


INT=$(echo $1 |tr [:upper:] [:lower:])
DEVICE=$2
ADDRESS=$3
NETWORK=$(ipcalc -n $ADDRESS | awk -F "=" '{print $2}')
PREFIX=$(ipcalc -p $ADDRESS | awk -F "=" '{print $2}')
GATEWAY=$4
HWADDR=$(ip link show dev $DEVICE | awk '/ether/ {print $2}' )


# Delete Any Previous Rules For Interface
LINE=$(iptables -L $CHAIN_NAME -nv --line-numbers |awk "\$8 ~ /^$INT\$/ {print \$1}")
if [ "x$LINE" != "x" ]; then
  echo "Deleting old forward rule for $INT "
	iptables -D $CHAIN_NAME $LINE
fi

# Delete Any Previous Rules For Device
LINE=$(iptables -L $CHAIN_NAME -nv --line-numbers |awk "\$8 ~ /^$DEVICE\$/ {print \$1}")
if [ "x$LINE" != "x" ]; then
  echo "Deleting old forward rule for $DEVICE "
	iptables -D $CHAIN_NAME $LINE
fi

ip link set dev $DEVICE down
[ -e $SYSCONFIG/ifcfg-$DEVICE ] && rm -f $SYSCONFIG/ifcfg-$DEVICE
ip link set dev $DEVICE name $INT


# Bring up interface on boot
cat > $SYSCONFIG/ifcfg-$INT <<-ENDCAT
TYPE=Ethernet
BOOTPROTO=none
DEVICE=$INT
ONBOOT=yes
HWADDR=$HWADDR
ETHTOOL_OPTS=" -G $INT rx 4096; -G $INT tx 4096"
ENDCAT


## SET IP Address
vtysh -c "conf term" -c "int $INT" -c "ip address $ADDRESS" -c "end" -c "copy run start"

forwarding=1
# Insert iptables rule

if [[ $INT =~ ^(wan).* ]]; then
  iptables -I $CHAIN_NAME -o $INT -j OUTBOUND
  echo "0.0.0.0/0 via $GATEWAY table wan" >> $SYSCONFIG/route-$INT
  echo "pref 80 iif lo to $NETWORK/$PREFIX lookup main" >> $SYSCONFIG/rule-$INT
  echo "pref 50 fwmark 0x101 lookup wan" >> $SYSCONFIG/rule-$INT
elif [[ $INT =~ ^(trading).* ]]; then
  iptables -I $CHAIN_NAME -o $INT -j OUTBOUND
  echo "0.0.0.0/0 via $GATEWAY table trading" >> $SYSCONFIG/route-$INT
  echo "pref 80 iif lo to $NETWORK/$PREFIX lookup main" >> $SYSCONFIG/rule-$INT
  echo "pref 51 fwmark 0x102 lookup trading" >> $SYSCONFIG/rule-$INT
elif [[ $INT =~ ^(public).* ]]; then
  iptables -I $CHAIN_NAME -o $INT -j OUTBOUND
  vtysh -c "conf term" -c "ip route 0.0.0.0/0 $GATEWAY" -c "end" -c "copy run start"
elif [[ $INT =~ ^(lan).* ]]; then
  iptables -I $CHAIN_NAME -o $INT -j INBOUND
  iptables -t mangle -I PREROUTING -i $INT -j OUTBOUND
  echo "pref 80 iif lo to $NETWORK/$PREFIX lookup main" >> $SYSCONFIG/rule-$INT
elif [[ $INT =~ ^(mgmt).* ]]; then
  forwarding=0
  echo "pref 80 iif lo to $NETWORK/$PREFIX lookup main" > $SYSCONFIG/rule-$INT
  echo "pref 100 iif lo to 10.0.0.0/8 lookup mgmt" >> $SYSCONFIG/rule-$INT
  echo "pref 100 iif lo to 192.168.0.0/16 lookup mgmt" >> $SYSCONFIG/rule-$INT
  echo "pref 100 iif lo to 172.16.0.0/12 lookup mgmt" >> $SYSCONFIG/rule-$INT
  echo "0.0.0.0/0 via $GATEWAY table mgmt " > $SYSCONFIG/route-$INT
fi

#set sysctl variable for forwarding or not.
cat > /etc/sysctl.d/$INT.conf <<END
net.ipv4.conf.$INT.forwarding = $forwarding
net.ipv4.conf.$INT.rp_filter = 0
END

sysctl -p > /dev/null 2>&1
service iptables save
ifup $INT
